AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: 'myLambdaFunction'
      Handler: 'src/index.handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref CodeS3Bucket
        S3Key: !Ref CodeS3Key
      Runtime: 'nodejs14.x'
      Environment:
        Variables:
          S3_BUCKET_NAME: !Ref S3BucketName
      Timeout: 30

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'LambdaS3Policy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
              - Effect: 'Allow'
                Action:
                  - 's3:PutObject'
                Resource: !Sub 'arn:aws:s3:::${S3BucketName}/*'

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref S3BucketName

Parameters:
  CodeS3Bucket:
    Type: String
    Description: 'The S3 bucket containing the Lambda deployment package'
  CodeS3Key:
    Type: String
    Description: 'The S3 key for the Lambda deployment package'
  S3BucketName:
    Type: String
    Description: 'The name of the S3 bucket to upload the CSV file to'

Outputs:
  LambdaFunctionArn:
    Description: 'ARN of the deployed Lambda function'
    Value: !GetAtt MyLambdaFunction.Arn